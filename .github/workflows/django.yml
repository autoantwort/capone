name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
          POSTGRES_DB: capone_test_db
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        pip install virtualenv
        npm i pg

    - name: Connect to PostgreSQL
      # Runs a script that creates a PostgreSQL client, populates
      # the client with data, and retrieves data
      run: node client.js
      # Environment variable used by the `client.js` script to create
      # a new PostgreSQL client.
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: localhost
        # The default PostgreSQL port
        POSTGRES_PORT: 5432
    - name: Run Tests
      run: |
        make test
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: localhost
        # The default PostgreSQL port
        POSTGRES_PORT: 5432
